{"version":3,"file":"static/js/619.13fb585d.chunk.js","mappings":"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","sources":["styles/breakpoints.js","Auth/RegistrationPage/RegistrationForm.styled.js","components/common/CustomButton.jsx","Auth/LoginPage/LoginForm.styled.js","Auth/LoginPage/LoginForm.jsx","components/pages/LoginPage.jsx"],"sourcesContent":["import { css } from 'styled-components';\nimport bgLoginDesktop from '../images/login-bg/bg-login-web.jpg';\nimport bgLoginDesktop2x from '../images/login-bg/bg-login-web@2x.jpg';\nimport bgRegisterDesktop from '../images/register-bg/bg-register-desktop.jpg';\nimport bgRegisterDesktop2x from '../images/register-bg/bg-register-desktop@2x.jpg';\n\nconst bgDesktop = props =>\n  props.isRegister ? bgRegisterDesktop : bgLoginDesktop;\nconst bgDesktop2x = props =>\n  props.isRegister ? bgRegisterDesktop2x : bgLoginDesktop2x;\n\nexport const mobileStyles = css`\n  @media screen and (max-width: 767px) {\n  }\n`;\n\nexport const tabletStyles = css`\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n`;\n\nexport const desktopStyles = css`\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesktop});\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 1/2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDesktop2x});\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport backRegisterTablet from '../../images/register-bg/bg-register-tablet.jpg';\nimport backRegisterDesktop from '../../images/png/dollar-desktop.png';\nimport backRegisterTabletRetina from '../../images/png/dollar-tabletx2.png';\nimport backRegisterDesktopRetina from '../../images/png/dollar-desktopx2.png';\nimport backLogIn from '../../images/login-bg/bg-login-web.jpg';\n\nimport { desktopStyles } from 'styles/breakpoints';\n\nexport const Card = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: radial-gradient(\n    circle at center center,\n    rgba(47, 21, 176, 0.73),\n    rgba(48, 46, 142, 1)\n  );\n\n  @media screen and (min-width: 768px) {\n    background-color: var(--background);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n\n    background-image: url(${backRegisterTablet});\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n      background-image: url(${backRegisterTabletRetina});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: 1280px) {\n      background-image: url(${backRegisterDesktop});\n      background-position: center;\n      background-size: cover;\n\n      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n        background-image: url(${backRegisterDesktopRetina});\n        background-size: cover;\n        background-position: center;\n      }\n    }\n  }\n`;\n\nexport const TitleRegisters = styled.h2`\n  color: var(--white-color);\n  line-height: 1.5;\n  font-size: 19px;\n\n  font-weight: 400;\n\n  text-align: center;\n\n  margin: 0px auto 52px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 27px;\n  }\n`;\n\nexport const FormRegister = styled.form`\n  padding: 23px 20px;\n\n  .button-wrapper > button,\n  .button-wrapper > button:hover,\n  .button-wrapper > button:focus {\n    transition: background 0.6s, color 0.6s, outline 0.6s;\n  }\n\n  .button-wrapper > button:hover,\n  .button-wrapper > button:focus {\n    background: transparent !important;\n    color: #ffc727 !important;\n    outline: 1px solid #ffc727;\n  }\n\n  .button-wrapper > a,\n  .button-wrapper > a:hover,\n  .button-wrapper > a:focus {\n    transition: background 0.6s, color 0.6s, outline 0.6s;\n  }\n\n  .button-wrapper > a:hover,\n  .button-wrapper > a:focus {\n    background: transparent !important;\n    color: #ffc727 !important;\n    outline: 1px solid #ffc727;\n  }\n\n  .button-wrapper > a {\n    display: block;\n    width: 300px;\n    padding-block: 13px;\n    @media screen and (max-width: 767.9px) {\n      width: 280px;\n    }\n    border: none;\n    border-radius: 20px;\n    box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n    background: var(--main-font-color);\n    color: var(--button-text-color);\n    text-align: center;\n    font-size: 18px;\n    line-height: normal;\n    letter-spacing: 1.8px;\n    text-transform: uppercase;\n  }\n\n  .button-wrapper > button {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 62px;\n\n    width: 533px;\n    margin: 0 auto;\n    border-radius: 8px;\n    background-color: var(--transparency-10);\n\n    box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n    backdrop-filter: blur(50px);\n  }\n\n  .button-wrapper {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .logo-register {\n    width: 26px;\n  }\n\n  @media screen and (min-width: 768px) {\n    .logo-register {\n      width: 35px;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n\n  .icons-login {\n    position: absolute;\n    width: 24px;\n    margin-left: 10px;\n  }\n`;\n\nexport const InputRegister = styled.input`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid var(--transparency-40);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 400;\n  color: var(--transparency-60);\n  padding: 0px 45px;\n  margin: 0px;\n  position: relative;\n  outline: none;\n\n  transition: border-color 0.3s, border-radius 0.3s, border-bottom 0.3s;\n\n  &:focus {\n    outline: none;\n    border-bottom: solid 1px #ffc727;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  width: 22px;\n  right: 0;\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const ErrorRegister = styled.div`\n  margin-top: 5px;\n  color: #ffc727;\n  text-align: center;\n  line-height: 1.5;\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: url(${props =>\n    props.isRegister ? backRegisterDesktop : backLogIn});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1200;\n\n  ${desktopStyles}\n\n  @media screen and (min-width: 768px) {\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 60px 0px;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  width: 400px;\n  flex-shrink: 0;\n  border-radius: 8px;\n  background: var(--Form-color, rgba(255, 255, 255, 0.1));\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 100%;\n    border-radius: 0px;\n    padding: calc(20 * (100vw / 480));\n    min-width: 300px;\n  }\n`;\n\nexport const LogotipStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h3 {\n    margin: 0 auto 52px;\n    color: var(--white);\n    font-size: 19px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n\n  @media screen and (min-width: 768px) {\n    h3 {\n      font-size: 26px;\n    }\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { Button } from '@mui/material';\n\nconst buttonStyles = css`\n  width: 300px;\n  height: 50px;\n  margin-top: 20px;\n  border: none;\n  border-radius: 20px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  text-decoration: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CustomButtonBase = styled(Button)`\n  && {\n    ${buttonStyles}\n    color: white;\n    background: var(\n      --button-gradient,\n      linear-gradient(97deg, #ffc727 -16.42%, #9e40ba 97.04%, #7000ff 150.71%)\n    );\n    box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      color: #3a2f43;\n    }\n  }\n`;\n\nconst CustomNavLinkBtnBase = styled(NavLink)`\n  && {\n    ${buttonStyles}\n    background-color: #ffffff;\n    color: #623f8b;\n  }\n`;\n\nexport const CustomButton = ({ isNavLink, customStyles, ...props }) => {\n  const StyledComponent = isNavLink ? CustomNavLinkBtnBase : CustomButtonBase;\n  return <StyledComponent {...props} />;\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { MdEmail, MdHttps } from 'react-icons/md';\nimport { FaUser } from 'react-icons/fa';\n\nexport const FormStyled = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 60px;\n`;\n\nexport const LabelStyled = styled(`label`)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const PasswordIcon = styled(MdHttps)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const UserIcon = styled(FaUser)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const IconInInput = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconContainer = styled.div`\n  position: absolute;\n`;\n\nexport const IconStyled = styled.div`\n  position: absolute;\n  left: 5px;\n  fill: rgba(255, 255, 255, 0.9);\n`;\n\nexport const ErrorMessageStyled = styled.span`\n  color: #ff868d;\n  font-size: 14px;\n  margin-top: 2px;\n`;\n\nexport const InputStyled = styled(Field)`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 1);\n  padding: 0 35px;\n  margin: 0;\n  position: relative;\n\n  &::placeholder {\n    font-size: 18px;\n    line-height: 1.5;\n    color: rgba(255, 255, 255, 0.6);\n  }\n\n  &:focus,\n  &:hover,\n  &:active,\n  &:visited {\n    outline: none;\n  }\n\n  &:focus::placeholder,\n  &:active::placeholder {\n    transform: translateY(-100%);\n    opacity: 1;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n`;\n","import React from 'react';\nimport { CustomButton } from '../../components/common/CustomButton';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { logIn } from '../../Redux/authReducers/authOperations';\nimport { Formik, ErrorMessage } from 'formik';\nimport Logotip from '../../images/svg/logo.svg';\nimport {\n  EmailIcon,\n  FormStyled,\n  IconContainer,\n  IconInInput,\n  InputStyled,\n  LabelStyled,\n  PasswordIcon,\n} from './LoginForm.styled';\nimport { toast } from 'react-toastify';\nimport { LogotipStyled } from '../RegistrationPage/RegistrationForm.styled';\nimport { Link, useNavigate } from 'react-router-dom';\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      await ValidationSchema.validate(values, { abortEarly: false });\n      const name = values.email.split('@')[0];\n      const formData = {\n        email: values.email.trim(),\n        password: values.password.trim(),\n      };\n      const result = await dispatch(logIn(formData));\n      if (result.error) {\n        toast.error('Login failed. Please check your credentials.', {\n          autoClose: 1200,\n        });\n      } else {\n        toast.success(`You have successfully logged in ${name}.`, {\n          autoClose: 1200,\n        });\n        navigate('/home');\n        resetForm();\n      }\n    } catch (error) {\n      toast.error('Login failed. Please check your credentials.', {\n        autoClose: 3000,\n      });\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleSubmit }) => (\n        <FormStyled onSubmit={handleSubmit}>\n          <LogotipStyled>\n            <img\n              src={Logotip}\n              alt=\"Logo MoneyGuard\"\n              width=\"36px\"\n              height=\"36px\"\n              draggable=\"false\"\n            />\n            <h3>MoneyGuard</h3>\n          </LogotipStyled>\n\n          <LabelStyled>\n            <IconInInput>\n              <IconContainer>\n                <EmailIcon />\n              </IconContainer>\n              <InputStyled name=\"email\" type=\"email\" placeholder=\"E-mail\" />\n            </IconInInput>\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </LabelStyled>\n\n          <LabelStyled>\n            <IconInInput>\n              <IconContainer>\n                <PasswordIcon />\n              </IconContainer>\n              <InputStyled\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </IconInInput>\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </LabelStyled>\n          <p className=\"register\">\n            You don't have an acount?{' '}\n            <Link className=\"register-link\" to=\"/register\">\n              Register\n            </Link>\n          </p>\n          <CustomButton type=\"submit\">Log In</CustomButton>\n          <CustomButton isNavLink to=\"/register\">\n            Register\n          </CustomButton>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n};\nexport default LoginForm;\n","import LoginForm from '../../Auth/LoginPage/LoginForm';\nimport { ContentContainer, MainContainer } from '../../Auth/RegistrationPage/RegistrationForm.styled';\n\n\nconst Login = () => {\n  return (\n    <MainContainer>\n      <ContentContainer>\n        <LoginForm />\n      </ContentContainer>\n    </MainContainer>\n  );\n};\n\nexport default Login;\n"],"names":["desktopStyles","css","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","props","isRegister","bgRegisterDesktop","bgLoginDesktop","bgRegisterDesktop2x","bgLoginDesktop2x","Card","styled","backRegisterTablet","backRegisterTabletRetina","backRegisterDesktop","backRegisterDesktopRetina","TitleRegisters","FormRegister","LogoWrapper","_templateObject4","InputWrapper","_templateObject5","InputRegister","_templateObject6","IconWrapper","_templateObject7","ErrorRegister","_templateObject8","MainContainer","_templateObject9","backLogIn","ContentContainer","_templateObject10","LogotipStyled","_templateObject11","buttonStyles","CustomButtonBase","Button","CustomNavLinkBtnBase","NavLink","CustomButton","_ref","isNavLink","customStyles","_objectWithoutProperties","_excluded","StyledComponent","_jsx","_objectSpread","FormStyled","Form","LabelStyled","EmailIcon","MdEmail","PasswordIcon","MdHttps","IconInInput","FaUser","IconContainer","InputStyled","Field","ValidationSchema","Yup","shape","email","required","password","dispatch","useDispatch","navigate","useNavigate","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","setSubmitting","resetForm","name","formData","_context","prev","next","validate","abortEarly","split","trim","logIn","sent","error","toast","autoClose","concat","t0","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","onSubmit","children","_ref3","_jsxs","src","Logotip","alt","width","height","draggable","type","placeholder","ErrorMessage","component","className","Link","to","LoginForm"],"sourceRoot":""}